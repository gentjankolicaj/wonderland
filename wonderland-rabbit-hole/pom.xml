<?xml version="1.0" encoding="UTF-8"?>

<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://maven.apache.org/POM/4.0.0"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>io.wonderland</groupId>
		<artifactId>wonderland</artifactId>
		<version>0.0.1-SNAPSHOT</version>
	</parent>


	<artifactId>wonderland-rabbit-hole</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>jar</packaging>
	<name>wonderland-rabbit-hole</name>

	<properties>
		<bc.pkix.version>1.78</bc.pkix.version>
		<bc.prov.version>1.78</bc.prov.version>
		<conscrypt.version>2.5.2</conscrypt.version>
		<java.version>11</java.version>
		<javafx.maven.plugin.version>0.0.8</javafx.maven.plugin.version>
		<javafx.version>17.0.6</javafx.version>
		<maven.compiler.source>11</maven.compiler.source>
		<maven.compiler.target>11</maven.compiler.target>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
	</properties>


	<dependencies>
		<!-- javafx dependencies -->
		<dependency>
			<groupId>org.openjfx</groupId>
			<artifactId>javafx-controls</artifactId>
			<version>${javafx.version}</version>
		</dependency>
		<dependency>
			<classifier>linux</classifier>
			<groupId>org.openjfx</groupId>
			<artifactId>javafx-graphics</artifactId>
			<version>${javafx.version}</version>
		</dependency>
		<dependency>
			<classifier>win</classifier>
			<groupId>org.openjfx</groupId>
			<artifactId>javafx-graphics</artifactId>
			<version>${javafx.version}</version>
		</dependency>
		<dependency>
			<classifier>mac</classifier>
			<groupId>org.openjfx</groupId>
			<artifactId>javafx-graphics</artifactId>
			<version>${javafx.version}</version>
		</dependency>
		<dependency>
			<groupId>org.controlsfx</groupId>
			<artifactId>controlsfx</artifactId>
			<version>11.1.2</version>
		</dependency>
		<dependency>
			<groupId>org.kordamp.bootstrapfx</groupId>
			<artifactId>bootstrapfx-core</artifactId>
			<version>0.4.0</version>
		</dependency>

		<!-- jfree dependencies -->
		<dependency>
			<groupId>org.jfree</groupId>
			<artifactId>org.jfree.chart3d</artifactId>
			<version>2.1.0</version>
		</dependency>
		<dependency>
			<groupId>org.jfree</groupId>
			<artifactId>org.jfree.chart3d.fx</artifactId>
			<version>2.1.1</version>
		</dependency>
		<dependency>
			<groupId>org.jfree</groupId>
			<artifactId>org.jfree.fxgraphics2d</artifactId>
			<version>2.1.4</version>
		</dependency>
		<dependency>
			<groupId>org.jfree</groupId>
			<artifactId>jfreechart</artifactId>
			<version>1.5.3</version>
		</dependency>
		<dependency>
			<groupId>org.jfree</groupId>
			<artifactId>org.jfree.chart.fx</artifactId>
			<version>2.0.1</version>
		</dependency>
		<dependency>
			<groupId>org.jfree</groupId>
			<artifactId>org.jfree.svg</artifactId>
			<version>5.0.2</version>
		</dependency>
		<dependency>
			<groupId>org.jfree</groupId>
			<artifactId>org.jfree.pdf</artifactId>
			<version>2.0</version>
		</dependency>

		<!-- Java CSP & and project modules -->
		<dependency>
			<groupId>io.wonderland</groupId>
			<artifactId>wonderland-alice</artifactId>
			<version>0.0.1-SNAPSHOT</version>
		</dependency>
		<dependency>
			<groupId>io.wonderland</groupId>
			<artifactId>wonderland-struct</artifactId>
			<version>0.0.1-SNAPSHOT</version>
		</dependency>
		<dependency>
			<groupId>io.wonderland</groupId>
			<artifactId>wonderland-garden</artifactId>
			<version>0.0.1-SNAPSHOT</version>
		</dependency>
		<dependency>
			<groupId>io.wonderland</groupId>
			<artifactId>wonderland-red-queen</artifactId>
			<version>0.0.1-SNAPSHOT</version>
		</dependency>

		<dependency>
			<groupId>org.bouncycastle</groupId>
			<artifactId>bcpkix-jdk18on</artifactId>
			<version>${bc.pkix.version}</version>
		</dependency>
		<dependency>
			<groupId>org.bouncycastle</groupId>
			<artifactId>bcprov-jdk18on</artifactId>
			<version>${bc.prov.version}</version>
		</dependency>
		<dependency>
			<groupId>org.bouncycastle</groupId>
			<artifactId>bctls-jdk18on</artifactId>
			<version>${bc.prov.version}</version>
		</dependency>

		<!-- multiple dependencies because of uber jar -->
		<dependency>
			<classifier>linux-x86_64</classifier>
			<groupId>org.conscrypt</groupId>
			<artifactId>conscrypt-openjdk</artifactId>
			<version>${conscrypt.version}</version>
		</dependency>
		<dependency>
			<classifier>osx-x86_64</classifier>
			<groupId>org.conscrypt</groupId>
			<artifactId>conscrypt-openjdk</artifactId>
			<version>${conscrypt.version}</version>
		</dependency>
		<dependency>
			<classifier>windows-x86_64</classifier>
			<groupId>org.conscrypt</groupId>
			<artifactId>conscrypt-openjdk</artifactId>
			<version>${conscrypt.version}</version>
		</dependency>

		<dependency>
			<classifier>linux-x86_64</classifier>
			<groupId>software.amazon.cryptools</groupId>
			<artifactId>AmazonCorrettoCryptoProvider</artifactId>
			<version>[2.0, 3.0)</version>
		</dependency>

		<!-- barcode dependencies-->
		<dependency>
			<groupId>com.google.zxing</groupId>
			<artifactId>core</artifactId>
			<version>3.5.3</version>
		</dependency>
		<dependency>
			<groupId>com.google.zxing</groupId>
			<artifactId>javase</artifactId>
			<version>3.5.3</version>
		</dependency>
	</dependencies>

	<build>
		<extensions>
			<extension>
				<groupId>kr.motd.maven</groupId>
				<artifactId>os-maven-plugin</artifactId>
				<version>1.4.1.Final</version>
			</extension>
		</extensions>
		<resources>
			<resource>
				<directory>${project.basedir}/src/main/resources</directory>
			</resource>
		</resources>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-clean-plugin</artifactId>
			</plugin>
			<plugin>
				<configuration>
					<jlinkImageName>rabbit.hole</jlinkImageName>
					<launcher>launcher</launcher>
					<mainClass>rabbit.hole/io.wonderland.rh.RabbitHoleApplication</mainClass>
				</configuration>
				<executions>
					<execution>
						<configuration>
							<mainClass>io.wonderland.rh.RabbitHoleApplication</mainClass>
						</configuration>
						<id>run</id>
					</execution>
					<execution>
						<configuration>
							<mainClass>io.wonderland.rh.RabbitHoleApplication</mainClass>
							<options>
								<option>-agentlib:jdwp=transport=dt_socket,server=y,suspend=y,address=*:8000
								</option>
							</options>
						</configuration>
						<id>debug</id>
					</execution>
				</executions>
				<groupId>org.openjfx</groupId>
				<artifactId>javafx-maven-plugin</artifactId>
				<version>0.0.8</version>
			</plugin>
			<plugin>
				<configuration>
					<annotationProcessorPaths>
						<path>
							<groupId>org.mapstruct</groupId>
							<artifactId>mapstruct-processor</artifactId>
							<version>${mapstruct.version}</version>
						</path>
						<path>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok</artifactId>
							<version>${lombok.version}</version>
						</path>
						<path>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok-mapstruct-binding</artifactId>
							<version>${lombok-mapstruct-binding.version}</version>
						</path>
					</annotationProcessorPaths>
					<encoding>${project.build.sourceEncoding}</encoding>
					<source>${maven.compiler.source}</source>
					<target>${maven.compiler.target}</target>
				</configuration>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>3.1.0</version>
			</plugin>
			<plugin>
				<configuration>
					<additionalOptions>-Xdoclint:none</additionalOptions>
					<docfilessubdirs>true</docfilessubdirs>
					<linksource>true</linksource>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>jar</goal>
						</goals>
						<id>attach-javadoc</id>
					</execution>
				</executions>
				<inherited>true</inherited>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>3.3.1</version>
			</plugin>
			<plugin>
				<executions>
					<execution>
						<configuration>
							<filters>
								<filter>
									<artifact>*:*</artifact>
									<excludes>
										<exclude>META-INF/*.SF</exclude>
										<exclude>META-INF/*.DSA</exclude>
										<exclude>META-INF/*.RSA</exclude>
									</excludes>
								</filter>
							</filters>
							<shadedArtifactAttached>true</shadedArtifactAttached>
							<transformers>
								<transformer
									implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
									<mainClass>io.wonderland.rh.RabbitHoleLauncher</mainClass>
								</transformer>
							</transformers>
						</configuration>
						<goals>
							<goal>shade</goal>
						</goals>
						<phase>package</phase>
					</execution>
				</executions>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-shade-plugin</artifactId>
				<version>3.2.4</version>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-install-plugin</artifactId>
			</plugin>
		</plugins>
	</build>
</project>
